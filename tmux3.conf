# Don't create a login shell, just run bash.
set -g default-command bash

# Set prefix key.
unbind C-b
set -g prefix `
bind ` send-prefix

# Remove delay after pressing Escape.
set -g escape-time 0

# Reload .tmux.conf.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Display message in the status line for 1 second.
set -g display-time 1000

# Don't flash the screen.
set -g visual-bell on

# Use a colorful terminal.
set -g default-terminal "xterm-256color"

# Increase length of scroll back.
set -g history-limit 10000

# ==== key bindings ==================================================

# Use emacs key bindings in copy and command mode.
set -g mode-keys emacs
set -g status-keys emacs

# vi-like movement among panes
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

# vi-like resizing of panes
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5

# Use | and - to produce horizontal and vertical splits.
bind | split-window -h
bind - split-window -v

# ==== status bar ====================================================

# Gray status bar with black writing.
set -g status-style fg=black,bg=colour250

# Invert status bar colors when displaying messages.
set -g message-style fg=colour250,bg=black

# Highlight current window in status bar.
setw -g window-status-style fg=colour244,bg=colour250
setw -g window-status-current-style fg=black,bg=colour250

# Center window list on status bar.
set -g status-justify centre

# On the left: allow up to 30 characters for session name, window
# index, and pane index.
set -g status-left-length 30
set -g status-left "[#S] #I #P"

# On the right: display hostname and current time in 24h notation.
# (For the time spec string see strftime(3).)
set -g status-right "#h %R"

# Update status bar once every 60 seconds.
set -g status-interval 60

# ==== miscellaneous =================================================

# Make ssh agent forwarding work with tmux
#
# Every time we connect to a server via ssh, an ssh socket is created
# and stored in SSH_AUTH_SOCK.  When attaching to an existing tmux
# session after reconnecting to the server, the tmux session remembers
# the old value of SSH_AUTH_SOCK which by then points to a socket that
# no longer exists.  This breaks ssh agent forwarding.  The following
# code, when added to .bashrc, makes sure that SSH_AUTH_SOCK is always
# equal to ~/.ssh/ssh_auth_sock and that the latter is symlinked to
# the current ssh socket.
#
# if [ "$SSH_AUTH_SOCK" != ~/.ssh/ssh_auth_sock ] && [ -S "$SSH_AUTH_SOCK" ]; then
#     ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
#     export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
# fi
